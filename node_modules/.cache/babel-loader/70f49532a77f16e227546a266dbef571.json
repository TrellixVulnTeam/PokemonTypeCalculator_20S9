{"ast":null,"code":"var _jsxFileName = \"/Users/jordansposito/Desktop/git/pokemonapp/pokemon-app/src/components/results.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst typeNames = [\"Normal\", \"Fire\", \"Water\", \"Electric\", \"Grass\", \"Ice\", \"Fighting\", \"Poison\", \"Ground\", \"Flying\", \"Psychic\", \"Bug\", \"Rock\", \"Ghost\", \"Dragon\", \"Dark\", \"Steel\", \"Fairy\"];\nconst chart = [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], //None\n[1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], //Normal\n[1, 0.5, 2, 1, 0.5, 0.5, 1, 1, 2, 1, 1, 0.5, 2, 1, 1, 1, 0.5, 0.5], //Fire\n[1, 0.5, 0.5, 2, 2, 0.5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.5, 1], //Water\n[1, 1, 1, 0.5, 1, 1, 1, 1, 2, 0.5, 1, 1, 1, 1, 1, 1, 0.5, 1], //Electric\n[1, 2, 0.5, 0.5, 0.5, 2, 1, 2, 0.5, 2, 1, 2, 1, 1, 1, 1, 1, 1], //Grass\n[1, 2, 1, 1, 1, 0.5, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1], //Ice\n[1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 0.5, 0.5, 1, 1, 0.5, 1, 2], //Fighting\n[1, 1, 1, 1, 0.5, 1, 0.5, 0.5, 2, 1, 2, 0.5, 1, 1, 1, 1, 1, 0.5], //Poison\n[1, 1, 2, 0, 2, 2, 1, 0.5, 1, 1, 1, 1, 0.5, 1, 1, 1, 1, 1], //Ground\n[1, 1, 1, 2, 0.5, 2, 0.5, 1, 0, 1, 1, 0.5, 2, 1, 1, 1, 1, 1], //Flying\n[1, 1, 1, 1, 1, 1, 0.5, 1, 1, 1, 0.5, 2, 1, 2, 1, 2, 1, 1], //Psychic\n[1, 2, 1, 1, 0.5, 1, 0.5, 1, 0.5, 2, 1, 1, 2, 1, 1, 1, 1, 1], //Bug\n[0.5, 0.5, 2, 1, 2, 1, 2, 0.5, 2, 0.5, 1, 1, 1, 1, 1, 1, 2, 1], //Rock\n[0, 1, 1, 1, 1, 1, 0, 0.5, 1, 1, 1, 0.5, 1, 2, 1, 2, 1, 1], //Ghost\n[1, 0.5, 0.5, 0.5, 0.5, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2], //Dragon\n[1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 0, 2, 1, 0.5, 1, 0.5, 1, 2], //Dark\n[0.5, 2, 1, 1, 0.5, 0.5, 2, 0, 2, 0.5, 0.5, 0.5, 0.5, 1, 0.5, 1, 0.5, 0.5], //Steel\n[1, 1, 1, 1, 1, 1, 0.5, 2, 1, 1, 1, 0.5, 1, 1, 0, 0.5, 2, 1] //Fairy\n];\n\nclass Results extends React.Component {\n  constructor(props) {\n    super(props);\n    this.allWeaknesses = this.allWeaknesses.bind(this);\n  }\n\n  allResistances() {\n    var result = [];\n    var slots = [[this.props.state.slot0_type1, this.props.state.slot0_type2], [this.props.state.slot1_type1, this.props.state.slot1_type2], [this.props.state.slot2_type1, this.props.state.slot2_type2], [this.props.state.slot3_type1, this.props.state.slot3_type2], [this.props.state.slot4_type1, this.props.state.slot4_type2], [this.props.state.slot5_type1, this.props.state.slot5_type2]];\n\n    for (var i = 0; i < slots.length; i++) {\n      for (var j = 0; j < chart.length; j++) {\n        if (chart[slots[i][0]][j] * chart[slots[i][1]][j] < 1) {\n          result.push(j);\n        }\n      }\n    }\n\n    return result.filter((value, index) => result.indexOf(value) === index);\n  }\n\n  allWeaknesses() {\n    var result = [];\n    var slots = [[this.props.state.slot0_type1, this.props.state.slot0_type2], [this.props.state.slot1_type1, this.props.state.slot1_type2], [this.props.state.slot2_type1, this.props.state.slot2_type2], [this.props.state.slot3_type1, this.props.state.slot3_type2], [this.props.state.slot4_type1, this.props.state.slot4_type2], [this.props.state.slot5_type1, this.props.state.slot5_type2]];\n\n    for (var i = 0; i < slots.length; i++) {\n      for (var j = 0; j < chart.length; j++) {\n        if (chart[slots[i][0]][j] * chart[slots[i][1]][j] >= 2) {\n          result.push(j);\n        }\n      }\n    }\n\n    return result.filter((value, index) => result.indexOf(value) === index);\n  }\n\n  getUnresisted(num) {\n    var types = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];\n    var result = [];\n    var resultNum = [];\n    this.allResistances().forEach(resistance => {\n      types[resistance] = 0;\n    });\n\n    for (var i = 0; i < types.length; i++) {\n      if (types[i] == 1) {\n        result.push(typeNames[i]);\n        resultNum.push(i);\n      }\n    }\n\n    if (num) {\n      return resultNum;\n    } else {\n      return result;\n    }\n  }\n\n  getWeaknesses() {\n    var types = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];\n    var result = [];\n    this.allWeaknesses().forEach(weakness => {\n      types[weakness] = 0;\n    });\n\n    for (var i = 0; i < types.length; i++) {\n      if (types[i] == 0) {\n        result.push(typeNames[i]);\n      }\n    }\n\n    return result;\n  }\n\n  getObsoletePokemon() {\n    var results = [];\n    var counts = {};\n    var slots = [this.props.state.slot0_type1, this.props.state.slot0_type2, this.props.state.slot1_type1, this.props.state.slot1_type2, this.props.state.slot2_type1, this.props.state.slot2_type2, this.props.state.slot3_type1, this.props.state.slot3_type2, this.props.state.slot4_type1, this.props.state.slot4_type2, this.props.state.slot5_type1, this.props.state.slot5_type2];\n    slots.forEach(x => {\n      counts[x] = (counts[x] || 0) + 1;\n    });\n    var keys = Object.keys(counts);\n\n    for (var i = 1; i < Object.keys(counts).length; i++) {\n      if (counts[keys[i]] > 1) {\n        results.push(typeNames[keys[i] - 1]);\n      }\n    }\n\n    return results;\n  } // Something that resists unresisted\n  // Answer to unanswered weaknesses\n\n\n  getAdditions() {\n    var slots = [[this.props.state.slot0_type1, this.props.state.slot0_type2], [this.props.state.slot1_type1, this.props.state.slot1_type2], [this.props.state.slot2_type1, this.props.state.slot2_type2], [this.props.state.slot3_type1, this.props.state.slot3_type2], [this.props.state.slot4_type1, this.props.state.slot4_type2], [this.props.state.slot5_type1, this.props.state.slot5_type2]];\n\n    for (var i = 0; i < slots.length; i++) {\n      if (slots[i][0] == 0 && slots[i][1] == 0) {\n        return [];\n      }\n    }\n\n    var unresisted = this.getUnresisted(1);\n    unresisted.forEach(u => {});\n    return [\"lol\"];\n  }\n\n  render() {\n    var weaknessList = this.getWeaknesses();\n    var resistanceList = this.getUnresisted();\n    var obsoletePokemon = this.getObsoletePokemon();\n    var additions = this.getAdditions();\n    var rating = 36 - weaknessList.length - resistanceList.length - obsoletePokemon.length;\n    var ratingText;\n    if (rating < 10) ratingText = \"Awful\";\n    if (rating >= 10 && rating < 15) ratingText = \"Very Bad\";\n    if (rating >= 15 && rating < 20) ratingText = \"Okay\";\n    if (rating >= 20 && rating < 25) ratingText = \"Good\";\n    if (rating >= 25 && rating < 30) ratingText = \"Very Good\";\n    if (rating >= 30) ratingText = \"Exceptional\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col fw-bold fs-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Unresisted:\", resistanceList.map((r, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-dark\",\n            children: [\" \", r, \" \"]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Weaknesses:\", weaknessList.map((w, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-dark\",\n            children: [\" \", w, \" \"]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 25\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Duplicate Types:\", obsoletePokemon.map((o, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-dark\",\n            children: [\" \", o, \" \"]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 25\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Rating: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-dark\",\n            children: ratingText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-5\",\n          children: [\"Recommended Additions:\", additions.map((a, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-dark\",\n            children: [\" \", a, \" \"]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 25\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\n;\nexport default Results;","map":{"version":3,"sources":["/Users/jordansposito/Desktop/git/pokemonapp/pokemon-app/src/components/results.js"],"names":["React","typeNames","chart","Results","Component","constructor","props","allWeaknesses","bind","allResistances","result","slots","state","slot0_type1","slot0_type2","slot1_type1","slot1_type2","slot2_type1","slot2_type2","slot3_type1","slot3_type2","slot4_type1","slot4_type2","slot5_type1","slot5_type2","i","length","j","push","filter","value","index","indexOf","getUnresisted","num","types","resultNum","forEach","resistance","getWeaknesses","weakness","getObsoletePokemon","results","counts","x","keys","Object","getAdditions","unresisted","u","render","weaknessList","resistanceList","obsoletePokemon","additions","rating","ratingText","map","r","w","o","a"],"mappings":"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","sourcesContent":["import React from 'react';\n\nconst typeNames = [\"Normal\", \"Fire\", \"Water\", \"Electric\", \"Grass\", \"Ice\", \n\"Fighting\", \"Poison\", \"Ground\", \"Flying\", \"Psychic\", \"Bug\", \"Rock\", \"Ghost\", \n\"Dragon\", \"Dark\", \"Steel\", \"Fairy\"];\nconst chart = [ \n    [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], //None\n    [1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], //Normal\n    [1, 0.5, 2, 1, 0.5, 0.5, 1, 1, 2, 1, 1, 0.5, 2, 1, 1, 1, 0.5, 0.5], //Fire\n    [1, 0.5, 0.5, 2, 2, 0.5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.5, 1], //Water\n    [1, 1, 1, 0.5, 1, 1, 1, 1, 2, 0.5, 1, 1, 1, 1, 1, 1, 0.5, 1], //Electric\n    [1, 2, 0.5, 0.5, 0.5, 2, 1, 2, 0.5, 2, 1, 2, 1, 1, 1, 1, 1, 1], //Grass\n    [1, 2, 1, 1, 1, 0.5, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1], //Ice\n    [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 0.5, 0.5, 1, 1, 0.5, 1, 2], //Fighting\n    [1, 1, 1, 1, 0.5, 1, 0.5, 0.5, 2, 1, 2, 0.5, 1, 1, 1, 1, 1, 0.5], //Poison\n    [1, 1, 2, 0, 2, 2, 1, 0.5, 1, 1, 1, 1, 0.5, 1, 1, 1, 1, 1], //Ground\n    [1, 1, 1, 2, 0.5, 2, 0.5, 1, 0, 1, 1, 0.5, 2, 1, 1, 1, 1, 1], //Flying\n    [1, 1, 1, 1, 1, 1, 0.5, 1, 1, 1, 0.5, 2, 1, 2, 1, 2, 1, 1], //Psychic\n    [1, 2, 1, 1, 0.5, 1, 0.5, 1, 0.5, 2, 1, 1, 2, 1, 1, 1, 1, 1], //Bug\n    [0.5, 0.5, 2, 1, 2, 1, 2, 0.5, 2, 0.5, 1, 1, 1, 1, 1, 1, 2, 1], //Rock\n    [0, 1, 1, 1, 1, 1, 0, 0.5, 1, 1, 1, 0.5, 1, 2, 1, 2, 1, 1], //Ghost\n    [1, 0.5, 0.5, 0.5, 0.5, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2], //Dragon\n    [1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 0, 2, 1, 0.5, 1, 0.5, 1, 2], //Dark\n    [0.5, 2, 1, 1, 0.5, 0.5, 2, 0, 2, 0.5, 0.5, 0.5, 0.5, 1, 0.5, 1, 0.5, 0.5], //Steel\n    [1, 1, 1, 1, 1, 1, 0.5, 2, 1, 1, 1, 0.5, 1, 1, 0, 0.5, 2, 1] //Fairy\n];\n\nclass Results extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.allWeaknesses = this.allWeaknesses.bind(this);\n    }\n\n    allResistances(){\n        var result = []\n        var slots = [[this.props.state.slot0_type1, this.props.state.slot0_type2], [this.props.state.slot1_type1,\n            this.props.state.slot1_type2], [this.props.state.slot2_type1, this.props.state.slot2_type2], [this.props.state.slot3_type1,\n            this.props.state.slot3_type2], [this.props.state.slot4_type1, this.props.state.slot4_type2], [this.props.state.slot5_type1,\n            this.props.state.slot5_type2]]\n        \n        for(var i = 0; i < slots.length; i++){\n            for(var j = 0; j < chart.length; j++){\n                if(chart[slots[i][0]][j] * chart[slots[i][1]][j] < 1){\n                    result.push(j)\n                }\n            }\n        }\n        return result.filter((value, index) => result.indexOf(value) === index);\n    }\n\n    allWeaknesses(){\n        var result = []\n        var slots = [[this.props.state.slot0_type1, this.props.state.slot0_type2], [this.props.state.slot1_type1,\n            this.props.state.slot1_type2], [this.props.state.slot2_type1, this.props.state.slot2_type2], [this.props.state.slot3_type1,\n            this.props.state.slot3_type2], [this.props.state.slot4_type1, this.props.state.slot4_type2], [this.props.state.slot5_type1,\n            this.props.state.slot5_type2]]\n        \n        for(var i = 0; i < slots.length; i++){\n            for(var j = 0; j < chart.length; j++){\n                if(chart[slots[i][0]][j] * chart[slots[i][1]][j] >= 2){\n                    result.push(j)\n                }\n            }\n        }\n        return result.filter((value, index) => result.indexOf(value) === index);\n    }\n\n    getUnresisted(num){\n        var types = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]\n        var result = []\n        var resultNum = []\n\n        this.allResistances().forEach((resistance) => {\n            types[resistance] = 0;\n        })\n\n        for(var i = 0; i < types.length; i++){\n            if( types[i] == 1){\n                result.push(typeNames[i])\n                resultNum.push(i)\n            }\n        }\n        if(num){\n            return resultNum\n        } else {\n            return result\n        }\n    }\n\n    getWeaknesses(){\n        var types = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]\n        var result = []\n\n        this.allWeaknesses().forEach((weakness) => {\n            types[weakness] = 0;\n        })\n\n        for(var i = 0; i < types.length; i++){\n            if( types[i] == 0){\n                result.push(typeNames[i])\n            }\n        }\n\n        return result\n    }\n\n    getObsoletePokemon(){\n        var results = [];\n        var counts = {};\n        \n        var slots = [this.props.state.slot0_type1, this.props.state.slot0_type2, this.props.state.slot1_type1,\n            this.props.state.slot1_type2, this.props.state.slot2_type1, this.props.state.slot2_type2, this.props.state.slot3_type1,\n            this.props.state.slot3_type2, this.props.state.slot4_type1, this.props.state.slot4_type2, this.props.state.slot5_type1,\n            this.props.state.slot5_type2]\n\n        slots.forEach((x) => {\n            counts[x] = (counts[x] || 0) + 1;\n        });\n\n        var keys = Object.keys( counts );\n        for(var i = 1; i < Object.keys(counts).length; i++){\n            if(counts[keys[i]] > 1){\n                results.push(typeNames[keys[i]-1])\n            }\n        }\n\n        return results\n    }\n\n    // Something that resists unresisted\n    // Answer to unanswered weaknesses\n    getAdditions(){\n        var slots = [[this.props.state.slot0_type1, this.props.state.slot0_type2], [this.props.state.slot1_type1,\n            this.props.state.slot1_type2], [this.props.state.slot2_type1, this.props.state.slot2_type2], [this.props.state.slot3_type1,\n            this.props.state.slot3_type2], [this.props.state.slot4_type1, this.props.state.slot4_type2], [this.props.state.slot5_type1,\n            this.props.state.slot5_type2]]\n        for(var i = 0; i < slots.length; i++){\n            if(slots[i][0] == 0 && slots[i][1] == 0){\n                return []\n            }\n        }\n        var unresisted = this.getUnresisted(1)\n\n        unresisted.forEach((u) => {\n\n        })\n\n        return [\"lol\"]\n\n        \n\n    }\n\n    render() {\n        var weaknessList = this.getWeaknesses()\n        var resistanceList = this.getUnresisted()\n        var obsoletePokemon = this.getObsoletePokemon()\n        var additions = this.getAdditions()\n        var rating = 36 - weaknessList.length - resistanceList.length - obsoletePokemon.length;\n        var ratingText;\n\n        if(rating < 10)\n            ratingText = \"Awful\";\n        if(rating >= 10 && rating < 15)\n            ratingText = \"Very Bad\";\n        if(rating >= 15 && rating < 20)\n            ratingText = \"Okay\";\n        if(rating >= 20 && rating < 25)\n            ratingText = \"Good\";\n        if(rating >= 25 && rating < 30)\n            ratingText = \"Very Good\";\n        if(rating >= 30)\n            ratingText = \"Exceptional\";\n\n\n        return (\n        <div className=\"row\">\n            <div className=\"col fw-bold fs-2\">\n                <div>Unresisted:\n                    {resistanceList.map((r,index) => (\n                        <span key={index} className=\"text-dark\"> {r} </span>\n                    ))}    \n                </div>\n                <div>Weaknesses:\n                    {weaknessList.map((w,index) => (\n                        <span key={index} className=\"text-dark\"> {w} </span>\n                    ))}    \n                </div>\n                <div>Duplicate Types: \n                    {obsoletePokemon.map((o,index) => (\n                        <span key={index} className=\"text-dark\"> {o} </span>\n                    ))} \n                </div>\n                <div>Rating: <span className=\"text-dark\">{ratingText}</span></div>\n                <div className=\"mt-5\">Recommended Additions: \n                    {additions.map((a,index) => (\n                        <span key={index} className=\"text-dark\"> {a} </span>\n                    ))} \n                </div>\n            </div>\n        </div>\n        );\n    }\n};\n\nexport default Results;"]},"metadata":{},"sourceType":"module"}